name: Build EasyKit on All Platforms

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.2.3)'
        required: true
        type: string

jobs:
  create_tag:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

  build:
    needs: [create_tag]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller run_easykit.spec

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: easykit-build-${{ matrix.os }}
          path: build/

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Set tag name for manual or automatic
        id: tagname
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "::set-output name=tag::${{ github.event.inputs.version }}"
          else
            echo "::set-output name=tag::${GITHUB_REF##*/}"
          fi

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagname.outputs.tag }}
          release_name: Release ${{ steps.tagname.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/easykit-build-ubuntu-latest/run_easykit/run_easykit
          asset_name: easykit-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/easykit-build-windows-latest/run_easykit/run_easykit.exe
          asset_name: easykit-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/easykit-build-macos-latest/run_easykit/run_easykit
          asset_name: easykit-macos
          asset_content_type: application/octet-stream
