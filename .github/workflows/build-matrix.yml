name: Build EasyKit on All Platforms

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List files for debug (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          pwd
          ls -al

      - name: List files for debug (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          pwd
          ls

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: pyinstaller run_easykit.spec

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: easykit-build-${{ matrix.os }}
          path: build/

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set tag name
        id: tagname
        run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagname.outputs.tag }}
          release_name: Release ${{ steps.tagname.outputs.tag }}
          draft: false
          prerelease: false

    #   - name: Upload Linux artifact
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: dist/easykit-build-ubuntu-latest/run_easykit/run_easykit
    #       asset_name: easykit-linux
    #       asset_content_type: application/octet-stream

    #   - name: Upload Windows artifact
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: dist/easykit-build-windows-latest/run_easykit/run_easykit.exe
    #       asset_name: easykit-windows.exe
    #       asset_content_type: application/octet-stream

    #   - name: Upload macOS artifact
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: dist/easykit-build-macos-latest/run_easykit/run_easykit
    #       asset_name: easykit-macos
    #       asset_content_type: application/octet-stream

    #   - name: Upload all build artifacts as zip
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: dist/easykit-build-ubuntu-latest.zip
    #       asset_name: easykit-build-ubuntu-latest.zip
    #       asset_content_type: application/zip

    #   - name: Upload all build artifacts as zip (Windows)
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: dist/easykit-build-windows-latest.zip
    #       asset_name: easykit-build-windows-latest.zip
    #       asset_content_type: application/zip

    #   - name: Upload all build artifacts as zip (macOS)
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: dist/easykit-build-macos-latest.zip
    #       asset_name: easykit-build-macos-latest.zip
    #       asset_content_type: application/zip

      - name: Zip dist folder
        run: |
          cd dist
          zip -r ../dist.zip .
        shell: bash

      - name: Upload dist folder as zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip
