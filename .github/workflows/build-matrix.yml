name: Build EasyKit for Windows Only

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List files for debug
        shell: pwsh
        run: |
          pwd
          ls

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka

      - name: Install Dependency Walker
        shell: pwsh
        run: choco install dependencywalker -y

      - name: Build with Nuitka
        run: |
          $tag = echo ${{ github.ref }} | % { $_ -replace 'refs/tags/v', '' }
          python -m nuitka --onefile --windows-icon-from-ico=images/icon.ico --output-filename=EasyKit_v$($tag).exe `
          --include-data-dir=docs=docs `
          --include-data-dir=images=images `
          --include-data-dir=windows=windows `
          run_easykit.py

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: easykit-exe
          path: dist/EasyKit_v*.exe

  release:
    name: Release
    needs: build
    runs-on: windows-latest
    steps:
      - name: Set tag name
        id: tagname
        run: |
          $tag = $env:GITHUB_REF -replace 'refs/tags/', ''
          echo "tag=$tag" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: easykit-exe
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagname.outputs.tag }}
          release_name: Release ${{ steps.tagname.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload Windows executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/EasyKit_${{ steps.tagname.outputs.tag }}.exe
          asset_name: EasyKit_${{ steps.tagname.outputs.tag }}.exe
          asset_content_type: application/octet-stream
